// Переменные и мапы

$colors-map: (
  "black": #070608,
  "blue-neon": #46f4db,
  "lime": #57d272
);

@function color($color-name) {
  @return map-get($colors-map, $color-name);
}

$font-weights-map: (
  "thin": 100,
  "extra-light": 200,
  "light": 300,
  "regular": 400,
  "medium": 500,
  "semi-bold": 600,
  "bold": 700,
  "extra-bold": 800,
  "black": 900,
  "extra-black": 1000
);

$text-list: (title "Russo One" regular normal 35px 70px 70px white,);

$link-list: (navbar-link "Muller" bold normal color("black") color("blue-neon") color("lime") 16px 20px 20px,);

$button-list: (
  // button-namee font-family font-weight font-style font-size tablet-font-size desktop-font-size color second-color padding-x padding-x-tablet padding-y padding-y-tablet border border-radius
  navbar-button "Muller" bold normal 16px 16px 16px white color("black") 0px 31.5px 0px 17px 40px,
  main-button-buy "Muller" bold normal 16px 20px 20px color("black") color("black") 38.5px 54px 17px 25px 40px,
  main-button-author "Muller" bold normal 16px 20px 20px white color("black") 33.5px 49px 12px 20px 40px,
);

// Сложные миксины

@mixin respond-to($media) {
  @if $media == tablet {
    @media only screen and (min-width: 1024px) {
      @content;
    }
  } @else if $media == desktop {
    @media only screen and (min-width: 1920px) {
      @content;
    }
  } @else {
    @warn "'#{ $media }' is not a valid media query.";
  }
}

@mixin size($type, $width, $height: $width) {
  @if $type == min {
    min-width: $width;
    @if $height != 0px {
      min-height: $height;
    }
  } @else if $type == max {
    max-width: $width;
    @if $height != 0px {
      max-height: $height;
    }
  } @else if $type == default {
    width: $width;
    @if $height != 0px {
      height: $height;
    }
  }
}

@mixin flex($direction: row, $justify: flex-start, $align: flex-start, $wrap: nowrap, $gap: 0px) {
  display: flex;

  @if $direction != row {
    flex-direction: $direction;
  } @else if $direction == ROW {
    flex-direction: row;
  }

  @if $justify != flex-start {
    justify-content: $justify;
  } @else if $justify == FLEX-START {
    justify-content: flex-start;
  }

  @if ($direction == row or $direction == row-reverse) and $align != flex-start {
    align-items: $align;
  } @else if $direction != row and $direction != row-reverse and $align == flex-start {
    align-items: $align;
  } @else if $align == FLEX-START {
    align-items: flex-start;
  }

  @if $direction == column {
    align-items: $align;
  }

  @if $wrap != nowrap {
    flex-wrap: $wrap;
  } @else if $wrap == NOWRAP {
    flex-wrap: nowrap;
  }

  @if $gap != 0px {
    gap: $gap;
  } @else if $gap == null {
    gap: 0;
  }
}

@mixin axis-indent($type, $axis, $value, $yvalue: 0px) {
  @if $axis == x {
    #{$type}-left: $value;
    #{$type}-right: $value;
  } @else if $axis == y {
    #{$type}-top: $value;
    #{$type}-bottom: $value;
  } @else if $axis == xy {
    #{$type}-left: $value;
    #{$type}-right: $value;
    #{$type}-top: $yvalue;
    #{$type}-bottom: $yvalue;
  } @else {
    @warn "'#{ $axis }' is not a valid axis.";
  }
}

@mixin border(
  $sides: (
    top,
    right,
    bottom,
    left,
    all
  ),
  $width: 1px,
  $style: solid,
  $color: null
) {
  @if $sides == all {
    border-width: $width;
    border-style: $style;
    border-color: $color;
  } @else {
    @each $side in $sides {
      border-#{$side}-width: $width;
      border-#{$side}-style: $style;
      @if $color != null {
        border-#{$side}-color: $color;
      }
    }
  }
}

@mixin linear-gradient($direction, $args...) {
  background: linear-gradient($direction, $args);
}

// Простые миксины

// Сложные шаблоны

@each $name, $weight in $font-weights-map {
  %#{$name} {
    font-weight: $weight;
  }
}

@each $item in $text-list {
  $name: nth($item, 1);
  $font: nth($item, 2);
  $font-weight: nth($item, 3);
  $font-style: nth($item, 4);
  $font-size: nth($item, 5);
  $tablet-font-size: nth($item, 6);
  $desktop-font-size: nth($item, 7);
  $color: nth($item, 8);

  %#{$name} {
    font-family: $font;
    @extend %#{$font-weight};
    font-style: $font-style;
    font-size: $font-size;
    color: $color;
    @if $font-size != $tablet-font-size {
      @include respond-to(tablet) {
        font-size: $tablet-font-size;
      }
    }
    @if $tablet-font-size != $desktop-font-size {
      @include respond-to(desktop) {
        font-size: $desktop-font-size;
      }
    }
  }
}

@each $item in $link-list {
  $name: nth($item, 1);
  $font: nth($item, 2);
  $font-weight: nth($item, 3);
  $font-style: nth($item, 4);
  $color: nth($item, 5);
  $second-color: nth($item, 6);
  $third-color: nth($item, 7);
  $font-size: nth($item, 8);
  $tablet-font-size: nth($item, 9);
  $desktop-font-size: nth($item, 10);

  %#{$name} {
    font-family: $font;
    @extend %#{$font-weight};
    font-style: $font-style;
    color: $color;
    font-size: $font-size;
    &:hover {
      color: $second-color;
    }
    &:active {
      color: $third-color;
    }
    @if $font-size != $tablet-font-size {
      @include respond-to(tablet) {
        font-size: $tablet-font-size;
      }
    }
    @if $tablet-font-size != $desktop-font-size {
      @include respond-to(desktop) {
        font-size: $desktop-font-size;
      }
    }
  }
}

@each $item in $button-list {
  $name: nth($item, 1);
  $font-family: nth($item, 2);
  $font-weight: nth($item, 3);
  $font-style: nth($item, 4);
  $font-size: nth($item, 5);
  $font-tablet-size: nth($item, 6);
  $font-desktop-size: nth($item, 7);
  $color: nth($item, 8);
  $second-color: nth($item, 9);
  $padding-x: nth($item, 10);
  $padding-x-tablet: nth($item, 11);
  $padding-y: nth($item, 12);
  $padding-y-tablet: nth($item, 13);
  $border-radius: nth($item, 14);

  %#{$name} {
    font-family: $font-family;
    @extend %#{$font-weight};
    font-style: $font-style;
    color: $color;
    font-size: $font-size;
    @include axis-indent(padding, x, $padding-x);
    @include axis-indent(padding, y, $padding-y);
    border-radius: $border-radius;
    @if $font-size != $font-tablet-size {
      @include respond-to(tablet) {
        font-size: $font-tablet-size;
      }
    }
    @if $font-tablet-size != $font-desktop-size {
      @include respond-to(desktop) {
        font-size: $font-desktop-size;
      }
    }
    @include respond-to(tablet) {
      @include axis-indent(padding, x, $padding-x-tablet);
      @include axis-indent(padding, y, $padding-y-tablet);
    }
    &:hover {
      color: $second-color;
    }
    &:active {
      color: $second-color;
    }
  }
}
// Простые шаблоны

%container {
  width: 300px;
  margin: 0 auto;
  @include respond-to(tablet) {
    width: 950px;
  }
  @include respond-to(desktop) {
    width: 1280px;
  }
}

%simple-transition {
  transition: 0.3s;
  &:hover {
    transition: 0.3s;
  }
  &:active {
    transition: 0.05s;
  }
}

%simple-scale {
  &:hover {
    transform: scale(1.2);
  }
  &:active {
    transform: scale(0.9);
  }
}

%navbar-button {
  @extend %simple-transition;
  @extend %navbar-button;
}

%main-button-buy {
  @extend %main-button-buy;
  @extend %simple-transition;
}

%main-button-author {
  @extend %main-button-author;
  @extend %simple-transition;
}
